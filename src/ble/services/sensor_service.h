#ifndef _SENSOR_SERVICE_H_
#define _SENSOR_SERVICE_H_

#include <zephyr/bluetooth/gatt.h>
#include "imu/imu.h"

#define SENSOR_SERVICE_UUID_VALUE BT_UUID_128_ENCODE(0x00000001, 0x88ba, 0x428d, 0xafd0, 0x09b18780283b)             // 00000001-88ba-428d-afd0-09b18780283b
#define SENSOR_SERVICE_DATA_CHAR_UUID_VALUE BT_UUID_128_ENCODE(0x00000002, 0x88ba, 0x428d, 0xafd0, 0x09b18780283b)   // 00000002-88ba-428d-afd0-09b18780283b
#define SENSOR_SERVICE_CONFIG_CHAR_UUID_VALUE BT_UUID_128_ENCODE(0x00000003, 0x88ba, 0x428d, 0xafd0, 0x09b18780283b) // 00000003-88ba-428d-afd0-09b18780283b

#define SENSOR_SERVICE_UUID_LBS BT_UUID_DECLARE_128(SENSOR_SERVICE_UUID_VALUE)
#define SENSOR_SERVICE_DATA_CHAR_UUID BT_UUID_DECLARE_128(SENSOR_SERVICE_DATA_CHAR_UUID_VALUE)
#define SENSOR_SERVICE_CONFIG_CHAR_UUID BT_UUID_DECLARE_128(SENSOR_SERVICE_CONFIG_CHAR_UUID_VALUE)

#define SENSOR_SERVICE_DATA_SAMPLES_COUNT 16

typedef struct
{
    uint8_t delta_time;
    uint8_t count;
    imu_sample_t samples[SENSOR_SERVICE_DATA_SAMPLES_COUNT];
} sensor_service_data_t;

uint8_t sensor_service_notify_data(sensor_service_data_t *);

#endif
